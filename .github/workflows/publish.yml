name: 🚀 Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Permite execução manual

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd bot_vision_suite
        pip install -e .
        
    - name: 🧪 Test import
      run: |
        cd bot_vision_suite
        python -c "import bot_vision; print('✅ Import successful!')"

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: 📦 Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: 🏗️ Build package
      run: |
        cd bot_vision_suite
        python -m build
        
    - name: 🔍 Check package
      run: |
        cd bot_vision_suite
        twine check dist/*
        
    - name: 🚀 Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        cd bot_vision_suite
        twine upload dist/*
        
    - name: 📋 Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-files
        path: bot_vision_suite/dist/
